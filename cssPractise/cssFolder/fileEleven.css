/* Important declaration uaAmer This is good mission */


/*
.one {
    background-color: red !important;
    font-weight: 200 !important;
} */


/* now we need to make margin collapse */

.parent {
    overflow: hidden;
    margin: auto;
    width: 400px;
    height: 200px;
    padding: 10px;
    background-color: #EEE;
}

.parent .one,
.parent .two {
    float: left;
    width: 50%;
    height: 100%;
}

.two .first {
    background-color: pink;
    width: 100%;
    height: 50%;
    margin-bottom: 30px;
}

.two .second {
    background-color: teal;
    width: 100%;
    height: 50%;
    margin-top: 50px;
}

.one {
    background-color: #aaa;
}

.two {
    background-color: #ddd;
}


/* so we need to implement this shape again uaAmer
..how to think yaAmer */


/* .amer-parent {
    padding: 10px;
    margin: auto;
    background-color: #EEE;
    width: 300px;
    height: 300px;
}

.amer-parent .amer-one,
.amer-parent .amer-two {
    float: left;
    width: 50%;
    height: 100%;
}

.amer-one {
    background-color: red;
}

.amer-two {
    background-color: blue;
}

.amer-two .amer-first {
    background-color: sienna;
    width: 100%;
    height: 50%;
}

.amer-two .amer-second {
    background-color: yellow;
    width: 100%;
    height: 50%;
} */


/* --------------Variables here */


/* 
:root {
    --headingOneColor: red;
    --headingTwoColor: green;
    --paragraphColor: blue;
    --backgroundColor: grey;
}

h1 {
    color: var(--headingOneColor);
    background-color: var(--paragraphColor);
}

h2 {
    --amerFirstLocalVariable: pink;
    color: var(--amerFirstLocalVariable);
    background-color: var(--backgroundColor);
}

p {
    background-color: var(--backgroundColor);
}

div {
    background-color: var(--backgroundColor);
} */


/* so local variables will be used inside a class sovled  */


/*
.amer-class {
    --amerColor: rgb(229, 48, 78);
    --amerText: bold;
    font-weight: var(--amerText);
    color: var(--amerColor);
} */


/* let' See What is the flexbox uaAmer  */


/* so here we used three classes uaAmer  */


/* so this is the parent uaAmer */


/* body {
    direction: rtl;
} */


/*
    powerful flexBox
--for the parent uaAmer
---These are for the parent uaAmer
    flex-direction: row column, row-reverse, column-reverse
    flex-flow:row wrap-reverse
    --we need to see how we could justify the content of this flex uaAmer
    justify-content:flex-end
    --now we need to see what used for children here
    flex-grow shrink order
    we have someThing called shorthand to write flex code
    flex=> [flexGrow flexShrink flexBasis] 1 0 auto
    */


/* This is the parent class uaAmre */

.flex {
    display: inline-flex;
    overflow: hidden;
    background-color: #eee;
    width: 70%;
    padding: 20px;
    justify-content: space-around;
    /* justify-content: center;
    justify-content: space-between;
    justify-content: flex-end;
    justify-content: center; */
    /* here we need to see what is the alignItems is */
    align-items: flex-start;
    height: 150px;
    flex-wrap: nowrap;
    height: 600px;
    flex-direction: column;
    flex-basis: 30%;
}

.flex div {
    flex: 2 5 300px;
    background-color: #f00;
    color: white;
    float: left;
    width: 25%;
    text-align: center;
    padding: 20px;
    margin-left: 20px;
}

.float {
    overflow: hidden;
    background-color: #EEE;
    width: 600px;
    margin: 20px auto;
    padding: 20px;
}

.float div {
    background-color: red;
    color: white;
    float: left;
    padding: 20px;
    text-align: center;
    width: 25%;
}

.problem {
    /* wow This is awesome uaAmer solved potter */
    line-height: 200px;
    text-align: center;
    background-color: blue;
    color: white;
    height: 200px;
    width: 200px;
}

.mohamed-inline-flex {
    display: inline-flex;
    background-color: tomato;
}